type Token @entity {
  # token address
  id: ID!
  # token symbol
  symbol: String!
  # token name
  name: String!
  # token decimals
  decimals: BigInt!
  # token total supply
  totalSupply: BigInt!
  # volume in token units
  volume: BigDecimal!
  # volume in derived USD
  volumeUSD: BigDecimal!
  # transactions count
  txCount: BigInt!
  # liquidity in token units
  totalValueLocked: BigDecimal!
  # liquidity in derived USD
  totalValueLockedUSD: BigDecimal!
  # derived price in ETH
  derivedETH: BigDecimal!
}

type Market @entity {
  # market address
  id: ID!

  # mirrored from the smart contract
  base: Token!
  token: Token!
  reserveBase: BigDecimal!
  reserveToken: BigDecimal!
  totalSupply: BigDecimal!

  # derived liquidity
  reserveETH: BigDecimal!
  reserveUSD: BigDecimal!
  # used for separating per market reserves and global
  trackedReserveETH: BigDecimal!

  # Price in terms of the asset market
  basePrice: BigDecimal!
  tokenPrice: BigDecimal!

  # lifetime volume stats
  volumeBase: BigDecimal!
  volumeToken: BigDecimal!
  volumeUSD: BigDecimal!
  untrackedVolumeUSD: BigDecimal!
  txCount: BigInt!

  # creation stats
  createdAtTimestamp: BigInt!
  createdAtBlockNumber: BigInt!
}

type Transaction @entity {
  # txn hash
  id: ID!
  # block txn was included in
  blockNumber: BigInt!
  # timestamp txn was confirmed
  timestamp: BigInt!
  # gas used during txn execution
  gasUsed: BigInt!
  gasPrice: BigInt!
  # derived values
  swaps: [Swap]! @derivedFrom(field: "transaction")
}

type Swap @entity {
  # transaction hash + "#" + index in swaps Transaction array
  id: ID!
  # pointer to transaction
  transaction: Transaction!
  # timestamp of transaction
  timestamp: BigInt!
  # pool swap occured within
  market: Market!
  # allow indexing by tokens
  base: Token!
  # allow indexing by tokens
  token: Token!
  # sender of the swap
  sender: Bytes!
  # recipient of the swap
  recipient: Bytes!
  # txn origin
  origin: Bytes! # the EOA that initiated the txn
  # delta of base swapped
  amountBase: BigDecimal!
  # delta of tokenToken swapped
  amountToken: BigDecimal!
  # derived info
  amountUSD: BigDecimal!
  # The sqrt(price) of the market after the swap, as a Q64.96
  sqrtPriceX96: BigInt!
  # the tick after the swap
  tick: BigInt!
  # index within the txn
  logIndex: BigInt
}
